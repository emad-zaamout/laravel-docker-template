user www-data;
worker_processes  auto;
error_log /dev/stderr info;

events {
    worker_connections  4096;
}

http {
    log_format main 'timestamp="$time_local" client=$remote_addr '
                   'request="$request" request_length=$request_length '
                   'bytes_sent=$bytes_sent '
                   'body_bytes_sent=$body_bytes_sent '
                   'referer=$http_referer '
                   'user_agent="$http_user_agent" '
                   'upstream_addr=$upstream_addr '
                   'upstream_status=$upstream_status '
                   'request_time=$request_time '
                   'upstream_response_time=$upstream_response_time '
                   'upstream_connect_time=$upstream_connect_time '
                   'upstream_header_time=$upstream_header_time '
                   'app_db_read_time=$upstream_http_db_read_time '
                   'app_db_write_time=$upstream_http_db_write_time '
                   'app_analysis_time=$upstream_http_analysis_time '
                   'app_other_time=$upstream_http_other_time ';

    access_log  /dev/stdout  main;

    include       mime.types;
    include       gzip_params;
    server_tokens off;
    default_type  application/octet-stream;

    client_max_body_size 32m;

    sendfile on;

    map $http_x_forwarded_proto $fastcgi_https {
        default '';
        https on;
    }

    map $request_method $php_method_override {
      default $request_method;
      PATCH POST;
      PUT POST;
    }

    upstream php-fpm {
        server 127.0.0.1:9000 max_fails=3 fail_timeout=3s;
    }

    server {
        listen 8080;
        root /app/public;
        index index.php index.html index.htm;

        add_header X-Content-Type-Options "nosniff";
        server_tokens off;

        location /nginx_status {
            stub_status;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        location ~ ^/(status|ping)$ {
            ## disable access logging for request if you prefer
            access_log off;
            ## Only allow trusted IPs for security, deny everyone else
            allow 127.0.0.1;
            # allow 1.2.3.4;    # your IP here
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;
            ## Now the port or socket of the php-fpm pool we want the status of
            fastcgi_pass php-fpm;
            # fastcgi_pass unix:/run/php-fpm/your_socket.sock;
        }

        # pass the PHP scripts to FastCGI server
        location ~ \.php$ {
            set $php_multipart_flag R;

            if ($is_args) {
                set $php_multipart_flag A;
            }

            if ($request_method = 'PATCH') {
                set $php_multipart_flag "${php_multipart_flag}M";
            }

            if ($request_method = 'PUT') {
                set $php_multipart_flag "${php_multipart_flag}M";
            }

            if ($content_type ~ 'multipart/form-data') {
                set $php_multipart_flag "${php_multipart_flag}C";
            }

            if ($php_multipart_flag = RMC) {
                error_page 482 = @php-method-replace;
                return 482;
            }

            if ($php_multipart_flag = AMC) {
                error_page 482 = @php-method-append;
                return 482;
            }

            include fastcgi_fpm;
        }

        location @php-method-append {
            include fastcgi_fpm;

            fastcgi_param REQUEST_METHOD $php_method_override;
            fastcgi_param REQUEST_URI "$request_uri&_method=$request_method";
            fastcgi_param QUERY_STRING "$args&_method=$request_method";
        }

        location @php-method-replace {
            include fastcgi_fpm;

            fastcgi_param REQUEST_METHOD $php_method_override;
            fastcgi_param REQUEST_URI "$request_uri?_method=$request_method";
            fastcgi_param QUERY_STRING "_method=$request_method";
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; deny all; }

        location / {
            # try to serve files directly, fallback to the front controller
            try_files $uri $uri/ /index.php?$query_string;
        }
    }
}